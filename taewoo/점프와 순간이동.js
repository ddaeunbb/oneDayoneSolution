function solution(n) {
  // 한 번에 k 칸을 앞으로 점프하거나, (현재까지 온 거리) * 2에 해당하는 위치로 순간이동
  // 순간이동할 때는 건전지 사용량이 줄지 않지만, 앞으로 K칸을 점프하면 K만큼 건전지를 사용함
  // 아이언 슈트를 착용할 땐 순간 이동이 더 효율적
  // 아이언 슈트를 착용하고 거리가 N만큼 떨어져 있는 장소로 가려고 함
  // 점프로 이동하는 것은 최소화
  // 거리 n이 주어졌을 때 사용해야 하는 건전지 사용량의 최솟값 return
  // 이 문제는 더하고 곱했을 때 최소한으로 더하는 목적을 갖음
  // 반대로 말하면 최소한으로 빼고, 최대한으로 나누면 됨
  var k = 0;
  
  while (n > 0) {
      if (n % 2 !== 0) {
          k++;
          n--;
      }
      n /= 2;
  }
  
  return k;
}